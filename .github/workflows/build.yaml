name: Build
on:
  workflow_dispatch:
  push:
    branches:
      - master
jobs:
  build:
    environment: production
    concurrency:
      group: build-${{ github.ref }}
      cancel-in-progress: true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: benjlevesque/short-sha@v2.1
        id: short-sha
        with:
          length: 7
      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          registry: registry.ap-northeast-1.aliyuncs.com
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          registry: registry.cn-shenzhen.aliyuncs.com
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build docker image and push
        uses: docker/build-push-action@v3
        with:
          push: true
          context: .
          tags: |
            registry.ap-northeast-1.aliyuncs.com/kemono/image-optimizer:master-${{ env.SHA }}
            registry.ap-northeast-1.aliyuncs.com/kemono/image-optimizer:latest
            registry.cn-shenzhen.aliyuncs.com/kemono/image-optimizer:master-${{ env.SHA }}
            registry.cn-shenzhen.aliyuncs.com/kemono/image-optimizer:latest
          file: Dockerfile

  deploy:
    environment: production
    concurrency:
      group: deploy-${{ github.ref }}
      cancel-in-progress: false
    needs: [build]
    runs-on: [self-hosted, docker]
    steps:
      - uses: actions/checkout@v3
      - name: Deploy Global
        run: |
          GIT_HASH=$(git rev-parse --short "$GITHUB_SHA")
          cp deploy/docker-compose.sample.yml /tmp/docker-compose-${GIT_HASH}.yml
          sed -i "s/{{GIT-SHA}}/${GIT_HASH}/g" /tmp/docker-compose-${GIT_HASH}.yml
          echo "${{ vars.OPTIMIZER_CONFIG_JS }}" > /tmp/optimizer-config-${GIT_HASH}.js

          SERVER=("web01" "web02")
          parallel "ssh {}.jp.internal.abo.network 'mkdir -p /root/image-optimizer'" ::: "${SERVER[@]}"
          parallel scp /tmp/docker-compose-${GIT_HASH}.yml {}.jp.internal.abo.network:/root/image-optimizer/docker-compose.yml ::: "${SERVER[@]}"
          parallel scp /tmp/optimizer-config-${GIT_HASH}.js {}.jp.internal.abo.network:/root/image-optimizer/optimizer.config.js ::: "${SERVER[@]}"
          parallel "ssh {}.jp.internal.abo.network 'cd /root/image-optimizer && docker compose up -d'" ::: "${SERVER[@]}"
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_USERNAME: 'GitHub Actions'
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_MESSAGE: 'image-optimizer 已部署'
